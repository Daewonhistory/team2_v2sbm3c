plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.9'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'dev.mvc'
version = '1.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-web'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation  'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.9'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'com.oracle.database.jdbc:ojdbc8:18.15.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.json', name: 'json', version: '20230227'

	implementation 'com.maxmind.geoip2:geoip2:2.16.0'
	// https://mvnrepository.com/artifact/commons-io/commons-io



	implementation 'commons-io:commons-io:2.11.0'
	// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
	implementation 'commons-codec:commons-codec:1.10'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
	implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
		implementation 'com.google.cloud:google-cloud-translate:2.43.0'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
  implementation 'javax.mail:javax.mail-api:1.6.2'
  implementation 'net.nurigo:sdk:4.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/restreact"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }


task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP

	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "yarn.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install', 'react-icons'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install', 'react-icons'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP

	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}
