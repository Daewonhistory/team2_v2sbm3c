<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.owner.OwnerDAOInter">
    <select id="checkID" resultType="int" parameterType="String">
        SELECT COUNT(id) as cnt
        FROM owner
        WHERE id=#{id}
    </select>




    <insert id="create" parameterType="dev.mvc.owner.OwnerVO">
        INSERT INTO owner(ownerno, id, email, passwd, oname,phone,tel,zipcode, address1, address2, grade, nickname,
                            image,reg_date)
        VALUES (owner_seq.nextval, #{id},#{email}, #{passwd}, #{oname}, #{phone},
                #{tel}, #{zipcode}, #{address1}, #{address2},  #{grade}, #{nickname}, #{image}, sysdate)
    </insert>

    <select id="list" resultType="dev.mvc.owner.OwnerVO">
        SELECT ownerno, id, passwd, oname, tel, phone, address1, address2, reg_date, grade
        FROM owner
        ORDER BY grade ASC, id ASC
    </select>


    <select id="list_search_count" parameterType="java.util.Map" resultType="int">
        <if test="type == 100">
            <if test="word == null or word == ''">
                <!-- 전체 결과를 가져오는 쿼리 -->
                SELECT count(*) as cnt
                FROM owner
            </if>
            <if test="word != null and word != ''">
                <!-- name으로 조회 -->
                SELECT count(*) as cnt
                FROM owner
                WHERE oname LIKE '%' || #{word} || '%'
            </if>
        </if>
        <if test="type == 200">
            <if test="word == null or word == ''">
                <!-- 전체 결과를 가져오는 쿼리 -->
                SELECT count(*) as cnt
                FROM owner
            </if>
            <if test="word != null and word != ''">
                <!-- ownerno으로 조회 -->
                SELECT count(*) as cnt
                FROM owner
                WHERE id LIKE '%' || #{word} || '%'
            </if>
        </if>
    </select>


    <select id="list_search_paging" parameterType="java.util.Map" resultType="dev.mvc.owner.OwnerVO">
        <if test="word == null or word == ''">
            <!-- 전체 결과를 가져오는 쿼리 -->
            SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date, certifi_image, identi_card_image, r
            FROM (
            SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2,  grade, image, reg_date,certifi_image, identi_card_image, ROWNUM as r
            FROM (
            SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image
            FROM owner
            ORDER BY ownerno ASC
            )
            )
            WHERE r BETWEEN #{start_num} AND #{end_num}
        </if>
        <if test="word != null and word != ''">
            <!-- type이 100이면 name으로 조회 -->
            <if test="type == '100'">
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image,r
                FROM (
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image, ROWNUM as r
                FROM (
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image
                FROM owner
                WHERE oname LIKE '%' || #{word} || '%'
                ORDER BY oname ASC
                )
                )
                WHERE r BETWEEN #{start_num} AND #{end_num}
            </if>
            <!-- type이 200이면 namesub으로 조회 -->
            <if test="type == '200'">
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date ,certifi_image, identi_card_image, r
                FROM (
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image,certifi_image, identi_card_image,  ROWNUM as r
                FROM (
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image
                FROM owner
                WHERE id LIKE '%' || #{word} || '%'
                ORDER BY id ASC
                )
                )
                WHERE r BETWEEN #{start_num} AND #{end_num}
            </if>
            <!-- type이 300이면 name과 namesub 모두로 조회 -->
            <if test="type == '300'">
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image,r
                FROM (
                SELECT ownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image,certifi_image, identi_card_image, ROWNUM as r
                FROM (
                SELECTownerno, id, oname, tel, phone, zipcode, address1, address2, grade, image, reg_date,certifi_image, identi_card_image
                FROM owner
                WHERE oname LIKE '%' || #{word} || '%' OR ownerno LIKE '%' || #{word} || '%'
                ORDER BY oname,ownerno ASC
                )
                )
                WHERE r BETWEEN #{start_num} AND #{end_num}
            </if>
        </if>

    </select>

<!--    &lt;!&ndash; ownerno로 회원 정보 조회 &ndash;&gt;-->
    <select id="read" resultType="dev.mvc.owner.OwnerVO" parameterType="int">
        SELECT ownerno, id, passwd, oname, tel,phone , address1, address2, reg_date, grade
        FROM owner
        WHERE ownerno = #{ownerno}
    </select>

    <!-- id(이메일)로 회원 정보 조회 -->
    <select id="readById" resultType="dev.mvc.owner.OwnerVO" parameterType="String">
        SELECT ownerno, id, passwd, oname, tel,phone ,zipcode, address1, address2,image, reg_date, grade
        FROM owner
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="dev.mvc.owner.OwnerVO">
        UPDATE owner
        SET  oname=#{oname}, phone=#{phone}, address1=#{address1}, address2=#{address2}
        WHERE id=#{id}
    </update>

    <!--   프로필 업데이트 처리 -->
    <update id="updateProfile" parameterType="dev.mvc.owner.OwnerVO">
        UPDATE owner
        SET  image=#{image}
        WHERE id=#{id}
    </update>
<!--    <delete id="delete" parameterType="int">-->
<!--        update owner set  grade=99-->
<!--        WHERE ownerno=#{ownerno}-->
<!--    </delete>-->

<!--    &lt;!&ndash; 로그인 &ndash;&gt;-->
    <select id="login" resultType="int" parameterType="HashMap">
    <![CDATA[
        SELECT COUNT(ownerno) as cnt
        FROM owner
        WHERE id = #{id}
          AND passwd = #{passwd}
          AND grade <> 99
        ]]>
    </select>

    <!--  현재 패스워드 검사 -->
    <select id="passwd_check" parameterType="HashMap" resultType="int">
        SELECT COUNT(ownerno) as cnt
        FROM owner
        WHERE ownerno=#{ownerno} AND passwd=#{passwd}
    </select>

    <!-- 패스워드 변경 -->
    <update id="passwd_update" parameterType="HashMap">
        UPDATE owner
        SET passwd=#{passwd}
        WHERE ownerno=#{ownerno}
    </update>

    <update id="update_grade" >
        UPDATE owner
        SET grade=#{grade}
        WHERE ownerno=#{ownerno}
    </update>


    <insert id="createCertifi" parameterType="dev.mvc.owner.OwnerVO">
        INSERT INTO CERTIFI(CERTIFINO, ownerno, businessno, certifi_image,identi_card_image
                          ,reg_date)
        VALUES (certifi_seq.nextval, #{ownerno}, #{businessno}, #{certifi_image}, #{identi_card_image},
                 sysdate)
    </insert>


    <!--   사업자 등록증 신분증 등록-->
    <update id="updateCertifi" parameterType="dev.mvc.owner.OwnerVO">
        UPDATE owner
        SET businessno = #{businessno} , certifi_image = #{certifi_image}, identi_card_image= #{identi_card_image}, business_reg_date=sysdate
        WHERE ownerno= #{ownerno}
    </update>


    <!--    <select id="list_by_cateno" resultType="dev.mvc.contents.ContentsVO" parameterType="int">-->
<!--        SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, rdate,-->
<!--               file1, file1saved, thumb1, size1, mp4-->
<!--        FROM contents-->
<!--        WHERE cateno = #{cateno}-->
<!--        ORDER BY contentsno DESC-->
<!--    </select>-->
</mapper>