<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.restaurant.RestaurantDAOInter">
    <select id="checkID" resultType="int" parameterType="String">
        SELECT COUNT(id) as cnt
        FROM owner
        WHERE id=#{id}
    </select>



	<!-- 기존 create-->
    <insert id="create" parameterType="dev.mvc.restaurant.RestaurantVO">
        INSERT INTO restaurant(restno, name, tel, ownerno, categoryno, grade, address, lat, lng,botareano,reserve_range)
        VALUES (restaurant_seq.nextval, #{name},#{tel}, #{ownerno}, #{categoryno},1,#{address}, #{lat}, #{lng}, #{botareano}, #{reserve_range})
    </insert>
    
	
    <select id="foreign" >
      SELECT restno
      FROM  restaurant
      WHERE ownerno = #{ownerno}
    </select>


	<select id="restaurantCount">
		SELECT COUNT(*)
		FROM restaurant
		WHERE ownerno = #{ownerno}
	</select>


  <select id="list_search_paging" parameterType="map" resultType="dev.mvc.dto.RestDTO">
    <if test="type == 100">
      <if test="word == null or word == ''">
        <!-- 전체 결과를 가져오는 쿼리 -->
        <![CDATA[
        SELECT restno,name,tel,categoryno,ownerno, image1,image2,image3
        FROM (
          SELECT re.restno, re.name, re.tel, re.categoryno,re.ownerno, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
          FROM restaurant re
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
          WHERE ROWNUM <= #{end_num}
        )
        WHERE rnum >= #{start_num}
      ]]>
      </if>
      <if test="word != null and word != ''">
        <!-- name으로 조회 -->
        <![CDATA[
        SELECT restno,name,tel,categoryno,ownerno, image1,image2,image3
        FROM (
          SELECT re.restno, re.name, re.tel, re.categoryno,re.ownerno, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
          FROM restaurant re
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
          WHERE re.name LIKE '%' || #{word} || '%' AND ROWNUM <= #{end_num}
        )
        WHERE rnum >= #{start_num}
      ]]>
      </if>
    </if>
    <if test="type == 200">
      <if test="word == null or word == ''">
        <!-- 전체 결과를 가져오는 쿼리 -->
        <![CDATA[
        SELECT restno,name,tel,categoryno,ownerno, image1,image2,image3
        FROM (
          SELECT re.restno, re.name, re.tel, re.categoryno,re.ownerno, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
          FROM restaurant re
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
          WHERE ROWNUM <= #{end_num}
        )
        WHERE rnum >= #{start_num}
      ]]>
      </if>
      <if test="word != null and word != ''">
        <!-- ownerno로 조회 -->
        <![CDATA[
        SELECT  restno,name,tel,categoryno,ownerno, image1,image2,image3
        FROM (
          SELECT re.restno, re.name, re.tel, re.categoryno,re.ownerno, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
          FROM restaurant re
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
          LEFT JOIN (
              SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
              FROM restimage
          ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
          WHERE re.ownerno LIKE '%' || #{word} || '%' AND ROWNUM <= #{end_num}
        )
        WHERE rnum >= #{start_num}
      ]]>
      </if>
    </if>
  </select>





    <select id="findByOwnerR" parameterType="int" resultType="dev.mvc.restaurant.RestaurantVO">

     SELECT *
     FROM restaurant WHERE ownerno = #{ownerno}


    </select>

    <select id="list_search_count" parameterType="java.util.Map" resultType="int">
        <if test="type == 100">
            <if test="word == null or word == ''">
                <!-- 전체 결과를 가져오는 쿼리 -->
                SELECT count(*) as cnt
                FROM restaurant
            </if>
            <if test="word != null and word != ''">
                <!-- name으로 조회 -->
                SELECT count(*) as cnt
                FROM restaurant
                WHERE name LIKE '%' || #{word} || '%'
            </if>
        </if>
        <if test="type == 200">
            <if test="word == null or word == ''">
                <!-- 전체 결과를 가져오는 쿼리 -->
                SELECT count(*) as cnt
                FROM restaurant
            </if>
            <if test="word != null and word != ''">
                <!-- ownerno으로 조회 -->
                SELECT count(*) as cnt
                FROM restaurant
                WHERE ownerno LIKE '%' || #{word} || '%'
            </if>
        </if>
    </select>
	<select id="list_all">
    SELECT *
    FROM restaurant
  </select>

	<select id="restaurant_ownerno" resultType="dev.mvc.dto.RestDTO">
  <![CDATA[
		SELECT re.restno, re.name, re.tel, re.categoryno, re.ownerno,
					 ri1.imagefile AS image1,
					 ri2.imagefile AS image2,
					 ri3.imagefile AS image3
		FROM restaurant re
					 LEFT JOIN (
			SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
			FROM restimage
		) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
					 LEFT JOIN (
			SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
			FROM restimage
		) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
					 LEFT JOIN (
			SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
			FROM restimage
		) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
		WHERE re.ownerno = #{ownerno}
		]]>
</select>
	<!-- 변경 예정 create-->
	<!--
	<insert id="create" parameterType="dev.mvc.restaurant.RestaurantVO">
        INSERT INTO restaurant(restno, name, tel, grade, address, lat, lng, reserveRange, ownerno, categoryno, botareano)
        VALUES (restaurant_seq.nextval, #{name},#{tel}, #{ownerno}, #{categoryno})
    </insert>
	-->
	
	<!-- 식당 조회 -->
	<select id="read" parameterType="int" resultType="dev.mvc.restaurant.RestaurantVO">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano
		FROM restaurant
		WHERE restno = #{restno}
	</select>
	
	<!-- 조건을 통한 식당 검색 -->
	<select id="condition_search_list" parameterType="HashMap" resultType="dev.mvc.restaurant.RestaurantVO">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano
		FROM restaurant
		WHERE restno IN (
			SELECT restno
  		FROM admitperson
  		WHERE reserve_date = TO_DATE(#{date}, 'YYYY-MM-DD HH24:MI:SS')
  		AND time = #{time}
  		AND admit_person >= curr_person + #{person})
		<if test="categoryno != ''">
			AND categoryno = #{categoryno}
		</if>
		
		<if test="botareanos.length > 0">
			AND botareano IN
			<foreach item="item" index="index" collection="botareanos" open="(" separator="," close=")">
            	#{item}
        	</foreach>
		</if>
		AND restno IN (
		    SELECT restno 
		    FROM menu
		    WHERE price BETWEEN #{min_price} * 10000 AND #{max_price} * 10000)
	</select>
	
	
	<select id="SearchRestaurantWithImg" parameterType="HashMap" resultType="dev.mvc.dto.RestFullData">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, botarea_name, rate, image1,image2,image3
		FROM(
			SELECT re.restno, re.name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, re.botareano, ba.name AS botarea_name, rate, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
			FROM restaurant re
	    LEFT JOIN (
	      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
	      FROM restimage 
	    ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
	    LEFT JOIN (
	      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
	      FROM restimage
	    ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
	    LEFT JOIN (
	      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
	      FROM restimage
	    ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
	    LEFT JOIN (
	     SELECT botareano, name
	     FROM botarea
	    ) ba ON ba.botareano = re.botareano
			WHERE re.restno IN (
				SELECT restno
	  		FROM admitperson
	  		WHERE reserve_date = TO_DATE(#{date}, 'YYYY-MM-DD HH24:MI:SS')
	  		AND time = #{time}
	  		AND admit_person >= curr_person + #{person})
			<if test="categoryno != ''">
				AND categoryno = #{categoryno}
			</if>
			<if test="word != null and word != ''">
        AND re.name LIKE '%' || #{word} || '%'
      </if>
			<if test="botareanos.length > 0">
				AND re.botareano IN
				<foreach item="item" index="index" collection="botareanos" open="(" separator="," close=")">
	            	#{item}
	        	</foreach>
			</if>
				AND re.restno IN (
			    SELECT restno 
			    FROM menu
			    WHERE price BETWEEN #{min_price} * 10000 AND #{max_price} * 10000)
		)
		ORDER BY rate DESC
	</select>
	
	<select id = "test">
		SELECT restno
    		FROM admitperson
    		WHERE reserve_date = TO_DATE('2024-06-06 12:06:00', 'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 좌표값을 통한 식당 검색 -->
	<select id="coordinateSearchList" parameterType="HashMap" resultType="dev.mvc.dto.RestFullData">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, image1,image2,image3
		FROM(
		    SELECT re.restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
		    FROM restaurant re
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage 
		    ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage
		    ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage
		    ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
		)
		WHERE lat BETWEEN #{westLat} AND #{eastLat}
		AND lng BETWEEN #{southLng} AND #{northLng}
	</select>
	
	<select id="readFullData" parameterType="int" resultType="dev.mvc.dto.RestFullData">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, image1,image2,image3
		FROM(
		    SELECT re.restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
		    FROM restaurant re
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage 
		    ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage
		    ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
		    LEFT JOIN (
		      SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
		      FROM restimage
		    ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
		    WHERE re.restno = #{restno}
		)
	</select>
		<select id="readFullDataOwner" parameterType="int" resultType="dev.mvc.dto.RestFullData">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, image1,image2,image3
		FROM(
					SELECT re.restno, name, tel, grade, address, lat, lng, reserve_range, re.ownerno, categoryno, botareano, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
					FROM restaurant re
								 LEFT JOIN (
						SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						FROM restimage
					) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
								 LEFT JOIN (
						SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						FROM restimage
					) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
								 LEFT JOIN (
						SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						FROM restimage
					) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
					WHERE re.ownerno = #{ownerno}
				)
	</select>
  <!--	랭킹 조회 -->
	<select id="ranking_rate_select">
		SELECT restno, name, tel, grade, address, lat, lng, reserve_range, ownerno, categoryno, botareano, image1, image2, image3,rate
		FROM (
					 SELECT re.restno, name, tel, grade, address, lat, lng, reserve_range, re.ownerno, categoryno, botareano,
									ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, re.rate,
									ROWNUM AS rnum
					 FROM restaurant re
									LEFT JOIN (
						 SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						 FROM restimage
					 ) ri1 ON re.restno = ri1.restno AND ri1.rn = 1
									LEFT JOIN (
						 SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						 FROM restimage
					 ) ri2 ON re.restno = ri2.restno AND ri2.rn = 2
									LEFT JOIN (
						 SELECT restno, imagefile, ROW_NUMBER() OVER (PARTITION BY restno ORDER BY rest_imgno) AS rn
						 FROM restimage
					 ) ri3 ON re.restno = ri3.restno AND ri3.rn = 3
					 WHERE re.rate > 0
					 ORDER BY re.rate DESC
				 )

	</select>	<!-- 특정 소유자의 식당 목록 조회 -->
	 <select id="list_by_ownerno" parameterType="int" resultType="dev.mvc.dto.RestDTO">
    SELECT restno, name, tel, categoryno, ownerno
    FROM restaurant
    WHERE ownerno = #{ownerno}
  </select>


	<update id="update_map">
		UPDATE restaurant
		SET address = #{address} , lng = #{lng} , lat = #{lat} , botareano = #{botareano}
		WHERE restno = #{restno}
	</update>

	<update id="update">
		UPDATE restaurant
		SET name = #{name} , categoryno = #{categoryno} , reserve_range = #{reserve_range} , tel = #{tel}
		WHERE restno = #{restno}
	</update>
	
    <update id="updateRate">
        UPDATE restaurant
        SET rate = #{avg_rate}
        WHERE restno = #{restno}
    </update>
	
	
	

	<delete id="delete_rest">
		DELETE FROM restaurant
		WHERE ownerno = #{ownerno}
	</delete>
</mapper>