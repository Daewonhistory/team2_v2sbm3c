<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.review.ReviewDAOInter">

    <!-- 리뷰 등록 -->
    <insert id="create" parameterType="dev.mvc.review.ReviewVO">
        INSERT INTO review (reviewno,  content, rate, rdate, custno, restno)
        VALUES (review_seq.nextval,  #{content}, #{rate}, sysdate, #{custno}, #{restno})
    </insert>

    <!-- 리뷰 읽기 -->
    <select id="read" resultType="dev.mvc.review.ReviewVO" parameterType="int">
        SELECT reviewno,  content, rate, rdate, custno, restno
        FROM review
        WHERE reviewno = #{reviewno}
    </select>

    <!-- 리뷰 삭제 -->
    <delete id="delete_review" parameterType="int">
        DELETE FROM review
        WHERE reviewno = #{reviewno}
    </delete>

    <!-- 리뷰 수정 -->
    <update id="update_review" parameterType="dev.mvc.review.ReviewVO">
        UPDATE review
        SET  content = #{content}, rate = #{rate}
        WHERE reviewno = #{reviewno}
    </update>
    
    <select id="foreign" resultType="int">
      SELECT reviewno
      FROM (
          SELECT reviewno
          FROM review
          WHERE restno = #{restno} AND custno = #{custno}
          ORDER BY reviewno DESC
      )
      WHERE ROWNUM = 1
    </select>

    <!-- 모든 리뷰 목록 조회 (이미지 포함) -->
    <select id="list_paging" resultType="dev.mvc.dto.ReviewDTO">
    <![CDATA[
    SELECT *
    FROM (
      SELECT re.reviewno, re.content, re.rate, re.rdate, ri1.imagefile AS image1, ri2.imagefile AS image2, ri3.imagefile AS image3, ROWNUM AS rnum
      FROM review re
      LEFT JOIN (
          SELECT reviewno, imagefile, ROW_NUMBER() OVER (PARTITION BY reviewno ORDER BY review_imgno) AS rn
          FROM reviewimage
      ) ri1 ON re.reviewno = ri1.reviewno AND ri1.rn = 1
      LEFT JOIN (
          SELECT reviewno, imagefile, ROW_NUMBER() OVER (PARTITION BY reviewno ORDER BY review_imgno) AS rn
          FROM reviewimage
      ) ri2 ON re.reviewno = ri2.reviewno AND ri2.rn = 2
      LEFT JOIN (
          SELECT reviewno, imagefile, ROW_NUMBER() OVER (PARTITION BY reviewno ORDER BY review_imgno) AS rn
          FROM reviewimage
      ) ri3 ON re.reviewno = ri3.reviewno AND ri3.rn = 3
      ORDER BY re.rdate DESC 
    )
    WHERE rnum <= #{end_num} AND rnum >= #{start_num} 
    ]]>
    </select>
    
    <select id="list_count" resultType="int" parameterType="int">
        SELECT COUNT(*) FROM review 
    </select>
    
   <select id="list_by_restno">
    SELECT reviewno,  content, rate, rdate, custno, restno
    FROM review
    WHERE restno = #{restno}
  </select>
    
    
    
</mapper>
